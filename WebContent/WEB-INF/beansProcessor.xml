<?xml version="1.0" encoding="GBK"?>
<!-- 指定Spring配置文件的根元素和Schema 导入p命名空间和util命名空间的元素 -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/util
	http://www.springframework.org/schema/util/spring-util-3.0.xsd">

	<!-- 配置2个普通Bean实例 -->
	<bean id="steelAxe" class="com.webwalker.spring.impl.SteelAxe" />
	<bean id="chinese" class="com.webwalker.spring.impl.Chinese"
		init-method="init">
		<property name="axe" ref="steelAxe" />
		<property name="name" value="依赖注入的值" />
	</bean>

	<!-- 1 Bean后处理器 -->
	<!-- 配置Bean后处理器，可以无需指定id属性 -->
	<bean id="beanPostProcessor" class="com.webwalker.spring.common.MyBeanPostProcessor" />

	<!-- 2 容器后处理器 -->
	<!-- 2.1 配置容器后处理器 -->
	<bean id="beanFactoryPostProcessor" class="com.webwalker.spring.common.MyBeanFactoryPostProcessor" />
	<!-- 2.2 属性占位符读取 -->
	<!-- PropertyPlaceholderConfigurer是一个Bean后处理器，它会读取 属性文件信息，并将这些信息设置成Spring配置文件的元数据。 -->
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:dbconn.properties</value>
				<!--如果有多个属性文件,依次在下面列出来 -->
				<!--value>wawa.properties</value -->
			</list>
		</property>
	</bean>
	<!-- 定义数据源Bean，使用C3P0数据源实现 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<!-- 从指定的文件中搜索指定连接数据库的驱动 -->
		<property name="driverClass" value="${jdbc.driverClassName}" />
		<!-- 指定连接数据库的URL -->
		<property name="jdbcUrl" value="${jdbc.url}" />
		<!-- 指定连接数据库的用户名 -->
		<property name="user" value="${jdbc.username}" />
		<!-- 指定连接数据库的密码 -->
		<property name="password" value="${jdbc.password}" />
	</bean>
	<!-- 2.3 属性占位符重写 -->
	<!-- PropertyOverrideConfigurer是一个Bean后处理器，它会读取 属性文件信息，并用这些信息设置覆盖Spring配置文件的元数据 -->
	<bean
		class="org.springframework.beans.factory.config.PropertyOverrideConfigurer">
		<property name="locations">
			<list>
				<value>classpath:dbconn.properties</value>
				<!--如果有多个属性文件,依次在下面列出来 -->
			</list>
		</property>
	</bean>
	<!-- 定义数据源Bean，使用C3P0数据源实现, 配置该Bean时没有指定任何信息，但Properties文件里的 信息将会直接覆盖该Bean的属性值 -->
	<bean id="dataSource1" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close" />
</beans>
